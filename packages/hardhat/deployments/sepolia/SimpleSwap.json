{
  "address": "0x673f915031E8aa590fA8916292e3988b3171dBB0",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "LiquidityAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "LiquidityRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "TokensSwapped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountADesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBDesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveOut",
          "type": "uint256"
        }
      ],
      "name": "getAmountOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf5d1f2d9de857d964eb7c0824c995ccb0d2bd0487480806b3f323492c7b11fea",
  "receipt": {
    "to": null,
    "from": "0x3F310bDA5D08B826bEf9aEa137DD558b32178743",
    "contractAddress": "0x673f915031E8aa590fA8916292e3988b3171dBB0",
    "transactionIndex": 279,
    "gasUsed": "1522288",
    "logsBloom": "0x
    "blockHash": "0x4857fe13402da6a4c841a7888a92684e3c759cb1e84f5a941e9d992266409fe8",
    "transactionHash": "0xf5d1f2d9de857d964eb7c0824c995ccb0d2bd0487480806b3f323492c7b11fea",
    "logs": [],
    "blockNumber": 8736833,
    "cumulativeGasUsed": "54903017",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "247feeb8e3dd5b7e2e27f9f44b637071",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"TokensSwapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"revision 4.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)\":{\"details\":\"This function transfers tokens from the user to the contract, calculates       the liquidity based on reserves,      and issues liquidity tokens to the user.\",\"params\":{\"amountADesired\":\"The desired amount of token A to add.\",\"amountAMin\":\"The minimum acceptable amount of token A to avoid failure.\",\"amountBDesired\":\"The desired amount of token B to add.\",\"amountBMin\":\"The minimum acceptable amount of token B to avoid failure.\",\"deadline\":\"The timestamp by which the transaction must be completed.\",\"to\":\"The address of the recipient who will receive liquidity tokens.\",\"tokenA\":\"The address of the first token.\",\"tokenB\":\"The address of the second token.\"},\"returns\":{\"amountA\":\"The effective amount of token A added.\",\"amountB\":\"The effective amount of token B added.\",\"liquidity\":\"The amount of liquidity tokens issued.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getAmountOut(uint256,uint256,uint256)\":{\"details\":\"This function computes the output amount based on input amount and reserves.\",\"params\":{\"amountIn\":\"The amount of input tokens.\",\"reserveIn\":\"The current reserves of the input token.\",\"reserveOut\":\"The current reserves of the output token.\"},\"returns\":{\"amountOut\":\"The amount of tokens to be received.\"}},\"getPrice(address,address)\":{\"details\":\"This function fetches the reserves of both tokens and calculates the price.\",\"params\":{\"tokenA\":\"The address of the first token.\",\"tokenB\":\"The address of the second token.\"},\"returns\":{\"price\":\"The price of token A in terms of token B.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)\":{\"details\":\"This function burns liquidity tokens from the user and returns the respective amounts of token A and B.\",\"params\":{\"amountAMin\":\"The minimum acceptable amount of token A to avoid failure.\",\"amountBMin\":\"The minimum acceptable amount of token B to avoid failure.\",\"deadline\":\"The timestamp by which the transaction must be completed.\",\"liquidity\":\"The amount of liquidity tokens to withdraw.\",\"to\":\"The address of the recipient who will receive the tokens.\",\"tokenA\":\"The address of the first token.\",\"tokenB\":\"The address of the second token.\"},\"returns\":{\"amountA\":\"The amount of token A received after removing liquidity.\",\"amountB\":\"The amount of token B received after removing liquidity.\"}},\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\":{\"details\":\"This function transfers the input token from the user to the contract,      calculates the swap amount based on reserves, and transfers the output token to the user.\",\"params\":{\"amountIn\":\"The amount of input tokens.\",\"amountOutMin\":\"The minimum acceptable amount of output tokens.\",\"deadline\":\"The timestamp by which the transaction must be completed.\",\"path\":\"An array of token addresses (input token, output token).\",\"to\":\"The address of the recipient who will receive the output tokens.\"},\"returns\":{\"amounts\":\"An array containing the amounts of input and output tokens.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"SimpleSwap a Liquidity Pool Contract \",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Adds liquidity to a token pair in the ERC-20 pool.\"},\"getAmountOut(uint256,uint256,uint256)\":{\"notice\":\"Calculates the amount of tokens received from a swap.\"},\"getPrice(address,address)\":{\"notice\":\"Retrieves the price of one token in terms of another.\"},\"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Removes liquidity from a token pair in the ERC-20 pool.\"},\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\":{\"notice\":\"Swaps an exact amount of one token for another.\"}},\"notice\":\"This contract allows users to add/remove liquidity and swap tokens in an ERC-20 pool.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSwap.sol\":\"SimpleSwap\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/SimpleSwap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\nimport {ERC20} from \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\n\\r\\n\\r\\n/// @title SimpleSwap a Liquidity Pool Contract \\r\\n/// @notice This contract allows users to add/remove liquidity and swap tokens in an ERC-20 pool.\\r\\n/// @dev  revision 4.\\r\\n\\r\\ncontract SimpleSwap is ERC20 {\\r\\n\\r\\n    constructor() ERC20(\\\"Liquidity\\\",\\\"LT\\\"){\\r\\n    }\\r\\n\\r\\n    event LiquidityAdded(address indexed tokenA, address indexed tokenB, uint amountA, uint amountB, uint liquidity, address indexed to);\\r\\n    event LiquidityRemoved(address indexed tokenA, address indexed tokenB, uint amountA, uint amountB, uint liquidity, address indexed to);\\r\\n    event TokensSwapped(address indexed from, address indexed tokenIn, address indexed tokenOut, uint amountIn, uint amountOut);\\r\\n    \\r\\n    /// @notice Adds liquidity to a token pair in the ERC-20 pool.\\r\\n    /// @dev This function transfers tokens from the user to the contract, calculates \\r\\n    ///      the liquidity based on reserves,\\r\\n    ///      and issues liquidity tokens to the user.\\r\\n    /// @param tokenA The address of the first token.\\r\\n    /// @param tokenB The address of the second token.\\r\\n    /// @param amountADesired The desired amount of token A to add.\\r\\n    /// @param amountBDesired The desired amount of token B to add.\\r\\n    /// @param amountAMin The minimum acceptable amount of token A to avoid failure.\\r\\n    /// @param amountBMin The minimum acceptable amount of token B to avoid failure.\\r\\n    /// @param to The address of the recipient who will receive liquidity tokens.\\r\\n    /// @param deadline The timestamp by which the transaction must be completed.\\r\\n    /// @return amountA The effective amount of token A added.\\r\\n    /// @return amountB The effective amount of token B added.\\r\\n    /// @return liquidity The amount of liquidity tokens issued.\\r\\n    function addLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint amountADesired,\\r\\n        uint amountBDesired,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountA, uint amountB, uint liquidity) {\\r\\n     require(deadline >= block.timestamp ,\\\"TimeIsOver\\\" );\\r\\n     liquidity = totalSupply();\\r\\n     if(liquidity > 0 ){\\r\\n        uint256 lq1 = (amountADesired* liquidity)/ ERC20(tokenA).balanceOf(address(this));\\r\\n        uint256 lq2 = (amountBDesired* liquidity)/ ERC20(tokenB).balanceOf(address(this));\\r\\n        if( lq1< lq2){\\r\\n            amountA = amountADesired;\\r\\n            amountB = getPrice(tokenA,tokenB)* amountA;\\r\\n        }else{\\r\\n            amountB = amountBDesired; \\r\\n            uint256 lprice = getPrice(tokenB, tokenA);  /// local var to solve nesting took deep error\\r\\n            amountA = ( lprice * amountB) / 1e18;\\r\\n        }\\r\\n     }else{\\r\\n        liquidity = amountADesired;\\r\\n        amountA = amountADesired ;\\r\\n        amountB = amountBDesired;\\r\\n     }\\r\\n    \\r\\n    require(amountAMin<= amountA,\\\"Amount A is too small\\\");\\r\\n    require(amountBMin <= amountB,\\\"Amount B is too small\\\");\\r\\n   \\r\\n    ERC20(tokenA).transferFrom(msg.sender,address(this), amountA);\\r\\n    ERC20(tokenB).transferFrom(msg.sender, address(this) ,amountB );\\r\\n    _mint(to,liquidity);\\r\\n    emit LiquidityAdded(tokenA, tokenB, amountA, amountB, liquidity, to);\\r\\n \\r\\n    return(amountA,amountB,liquidity);\\r\\n    }\\r\\n\\r\\n    /// @notice Removes liquidity from a token pair in the ERC-20 pool.\\r\\n    /// @dev This function burns liquidity tokens from the user and returns the respective amounts of token A and B.\\r\\n    /// @param tokenA The address of the first token.\\r\\n    /// @param tokenB The address of the second token.\\r\\n    /// @param liquidity The amount of liquidity tokens to withdraw.\\r\\n    /// @param amountAMin The minimum acceptable amount of token A to avoid failure.\\r\\n    /// @param amountBMin The minimum acceptable amount of token B to avoid failure.\\r\\n    /// @param to The address of the recipient who will receive the tokens.\\r\\n    /// @param deadline The timestamp by which the transaction must be completed.\\r\\n    /// @return amountA The amount of token A received after removing liquidity.\\r\\n    /// @return amountB The amount of token B received after removing liquidity.\\r\\n    function removeLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountA, uint amountB) {\\r\\n    \\r\\n    require(msg.sender == to, \\\"Only liquidity provider can burn their tokens\\\");\\r\\n    uint256 totalLiquidity = totalSupply();\\r\\n    \\r\\n    require(totalLiquidity > 0, \\\"No liquidity in the pool\\\");\\r\\n    require(deadline>= block.timestamp , \\\"TimeIsOver\\\" );\\r\\n    \\r\\n    amountA = liquidity * ERC20(tokenA).balanceOf(address(this))/totalLiquidity;\\r\\n    amountB = liquidity * ERC20(tokenB).balanceOf(address(this))/totalLiquidity;\\r\\n\\r\\n    require(amountA>= amountAMin,\\\"AmountA is too small\\\");\\r\\n    require(amountB>= amountBMin,\\\"AmountB is too small\\\");\\r\\n\\r\\n    _burn(msg.sender,liquidity);\\r\\n    ERC20(tokenA).transfer(to,amountA);\\r\\n    ERC20(tokenB).transfer(to,amountB);\\r\\n    \\r\\n    emit LiquidityRemoved(tokenA, tokenB, amountA, amountB, liquidity, to);\\r\\n    \\r\\n    return(amountA,amountB);\\r\\n    }\\r\\n\\r\\n    /// @notice Swaps an exact amount of one token for another.\\r\\n    /// @dev This function transfers the input token from the user to the contract,\\r\\n    ///      calculates the swap amount based on reserves, and transfers the output token to the user.\\r\\n    /// @param amountIn The amount of input tokens.\\r\\n    /// @param amountOutMin The minimum acceptable amount of output tokens.\\r\\n    /// @param path An array of token addresses (input token, output token).\\r\\n    /// @param to The address of the recipient who will receive the output tokens.\\r\\n    /// @param deadline The timestamp by which the transaction must be completed.\\r\\n    /// @return amounts An array containing the amounts of input and output tokens.\\r\\n    function swapExactTokensForTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint[] memory amounts) {\\r\\n        // Ensure the path is valid (length should be 2 for a direct swap)              \\r\\n        require(path.length == 2, \\\"Invalid path length\\\");\\r\\n        require(deadline>= block.timestamp , \\\"TimeIsOver\\\" );\\r\\n        \\r\\n        ERC20 tokenA = ERC20(path[0]);\\r\\n        ERC20 tokenB = ERC20(path[1]);\\r\\n        \\r\\n        // Get reserves before transfer\\r\\n        uint256 reserveA = tokenA.balanceOf(address(this));\\r\\n        uint256 reserveB = tokenB.balanceOf(address(this));\\r\\n        \\r\\n        // Transfer in first\\r\\n        tokenA.transferFrom(msg.sender, address(this), amountIn);\\r\\n\\r\\n        // Calculate amountOut using pre-swap reserves\\r\\n        uint256 amountOut = (amountIn * reserveB) / (reserveA + amountIn);\\r\\n        require(amountOut >= amountOutMin, \\\"AmountOut too small\\\");\\r\\n        tokenB.transfer(to, amountOut);\\r\\n        amounts = new uint256[](2);\\r\\n        amounts[0] = amountIn;\\r\\n        amounts[1] = amountOut;\\r\\n        emit TokensSwapped(msg.sender, path[0], path[path.length - 1], amountIn, amounts[amounts.length - 1]);    \\r\\n        return amounts;\\r\\n    \\r\\n    }\\r\\n\\r\\n    /// @notice Retrieves the price of one token in terms of another.\\r\\n    /// @dev This function fetches the reserves of both tokens and calculates the price.\\r\\n    /// @param tokenA The address of the first token.\\r\\n    /// @param tokenB The address of the second token.\\r\\n    /// @return price The price of token A in terms of token B.\\r\\n    function getPrice(\\r\\n        address tokenA,\\r\\n        address tokenB\\r\\n    ) public view returns (uint price) {\\r\\n\\r\\n        uint256 amountA = ERC20(tokenA).balanceOf(address(this));\\r\\n        uint256 amountB = ERC20(tokenB).balanceOf(address(this));\\r\\n        require(amountA > 0 && amountB > 0, \\\"Insufficient reserves for price calculation\\\");\\r\\n        require(tokenA != tokenB, \\\"Cannot calculate price for the same token\\\");\\r\\n        // Calculate price as amountB per amountA, scaled by 1e18 for precision\\r\\n        price = (amountB * 1e18) / amountA;\\r\\n       return price;\\r\\n    }\\r\\n\\r\\n    /// @notice Calculates the amount of tokens received from a swap.\\r\\n    /// @dev This function computes the output amount based on input amount and reserves.\\r\\n    /// @param amountIn The amount of input tokens.\\r\\n    /// @param reserveIn The current reserves of the input token.\\r\\n    /// @param reserveOut The current reserves of the output token.\\r\\n    /// @return amountOut The amount of tokens to be received.\\r\\n    function getAmountOut(\\r\\n        uint amountIn,\\r\\n        uint reserveIn,\\r\\n        uint reserveOut\\r\\n    ) external pure returns (uint amountOut) {\\r\\n        require(amountIn > 0, \\\"Amount in must be greater than zero\\\");\\r\\n        require(reserveIn > 0 && reserveOut > 0, \\\"Reserves must be greater than zero\\\"); \\r\\n        return (amountIn * reserveOut) / (amountIn + reserveIn);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xc2303acfc845728c5e71f5cc38cb0cdd993dec91097e1b41f5bba165636d4360\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051806040016040528060098152602001684c697175696469747960b81b81525060405180604001604052806002815260200161131560f21b81525081600390816200006091906200011d565b5060046200006f82826200011d565b505050620001e9565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000a357607f821691505b602082108103620000c457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200011857600081815260208120601f850160051c81016020861015620000f35750805b601f850160051c820191505b818110156200011457828155600101620000ff565b5050505b505050565b81516001600160401b0381111562000139576200013962000078565b62000151816200014a84546200008e565b84620000ca565b602080601f831160018114620001895760008415620001705750858301515b600019600386901b1c1916600185901b17855562000114565b600085815260208120601f198616915b82811015620001ba5788860151825594840194600190910190840162000199565b5085821015620001d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61199f80620001f96000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063ac41865a11610066578063ac41865a146101db578063baa2abde146101ee578063dd62ed3e14610216578063e8e337001461024f57600080fd5b806370a082311461019757806395d89b41146101c0578063a9059cbb146101c857600080fd5b806318160ddd116100c857806318160ddd1461014d57806323b872dd14610155578063313ce5671461016857806338ed17391461017757600080fd5b8063054d50d4146100ef57806306fdde0314610115578063095ea7b31461012a575b600080fd5b6101026100fd366004611530565b61027d565b6040519081526020015b60405180910390f35b61011d61036c565b60405161010c919061155c565b61013d6101383660046115c6565b6103fe565b604051901515815260200161010c565b600254610102565b61013d6101633660046115f0565b610418565b6040516012815260200161010c565b61018a61018536600461162c565b61043c565b60405161010c91906116ce565b6101026101a5366004611712565b6001600160a01b031660009081526020819052604090205490565b61011d610878565b61013d6101d63660046115c6565b610887565b6101026101e9366004611734565b610895565b6102016101fc366004611767565b610a7b565b6040805192835260208301919091520161010c565b610102610224366004611734565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61026261025d3660046117d1565b610e4b565b6040805193845260208401929092529082015260600161010c565b60008084116102df5760405162461bcd60e51b815260206004820152602360248201527f416d6f756e7420696e206d7573742062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b6000831180156102ef5750600082115b6103465760405162461bcd60e51b815260206004820152602260248201527f5265736572766573206d7573742062652067726561746572207468616e207a65604482015261726f60f01b60648201526084016102d6565b610350838561185b565b61035a838661186e565b6103649190611885565b949350505050565b60606003805461037b906118a7565b80601f01602080910402602001604051908101604052809291908181526020018280546103a7906118a7565b80156103f45780601f106103c9576101008083540402835291602001916103f4565b820191906000526020600020905b8154815290600101906020018083116103d757829003601f168201915b5050505050905090565b60003361040c8185856111d2565b60019150505b92915050565b6000336104268582856111e4565b610431858585611262565b506001949350505050565b6060600284146104845760405162461bcd60e51b8152602060048201526013602482015272092dcecc2d8d2c840e0c2e8d040d8cadccee8d606b1b60448201526064016102d6565b428210156104a45760405162461bcd60e51b81526004016102d6906118e1565b6000858560008181106104b9576104b9611905565b90506020020160208101906104ce9190611712565b90506000868660018181106104e5576104e5611905565b90506020020160208101906104fa9190611712565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610544573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610568919061191b565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156105b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d6919061191b565b6040516323b872dd60e01b8152336004820152306024820152604481018d90529091506001600160a01b038516906323b872dd906064016020604051808303816000875af115801561062c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106509190611934565b50600061065d8c8461185b565b610667838e61186e565b6106719190611885565b90508a8110156106b95760405162461bcd60e51b8152602060048201526013602482015272105b5bdd5b9d13dd5d081d1bdbc81cdb585b1b606a1b60448201526064016102d6565b60405163a9059cbb60e01b81526001600160a01b0389811660048301526024820183905285169063a9059cbb906044016020604051808303816000875af1158015610708573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072c9190611934565b5060408051600280825260608201835290916020830190803683370190505095508b8660008151811061076157610761611905565b602002602001018181525050808660018151811061078157610781611905565b60209081029190910101528989610799600182611956565b8181106107a8576107a8611905565b90506020020160208101906107bd9190611712565b6001600160a01b03168a8a60008181106107d9576107d9611905565b90506020020160208101906107ee9190611712565b6001600160a01b0316336001600160a01b03167fad56699d0f375866eb895ed27203058a36a713382aaded78eb6b67da266d43328f8a60018c516108329190611956565b8151811061084257610842611905565b6020026020010151604051610861929190918252602082015260400190565b60405180910390a450505050509695505050505050565b60606004805461037b906118a7565b60003361040c818585611262565b6040516370a0823160e01b815230600482015260009081906001600160a01b038516906370a0823190602401602060405180830381865afa1580156108de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610902919061191b565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038516906370a0823190602401602060405180830381865afa15801561094c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610970919061191b565b90506000821180156109825750600081115b6109e25760405162461bcd60e51b815260206004820152602b60248201527f496e73756666696369656e7420726573657276657320666f722070726963652060448201526a31b0b631bab630ba34b7b760a91b60648201526084016102d6565b836001600160a01b0316856001600160a01b031603610a555760405162461bcd60e51b815260206004820152602960248201527f43616e6e6f742063616c63756c61746520707269636520666f7220746865207360448201526830b6b2903a37b5b2b760b91b60648201526084016102d6565b81610a6882670de0b6b3a764000061186e565b610a729190611885565b95945050505050565b600080336001600160a01b03851614610aec5760405162461bcd60e51b815260206004820152602d60248201527f4f6e6c79206c69717569646974792070726f76696465722063616e206275726e60448201526c20746865697220746f6b656e7360981b60648201526084016102d6565b6000610af760025490565b905060008111610b495760405162461bcd60e51b815260206004820152601860248201527f4e6f206c697175696469747920696e2074686520706f6f6c000000000000000060448201526064016102d6565b42841015610b695760405162461bcd60e51b81526004016102d6906118e1565b6040516370a0823160e01b815230600482015281906001600160a01b038c16906370a0823190602401602060405180830381865afa158015610baf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd3919061191b565b610bdd908a61186e565b610be79190611885565b6040516370a0823160e01b815230600482015290935081906001600160a01b038b16906370a0823190602401602060405180830381865afa158015610c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c54919061191b565b610c5e908a61186e565b610c689190611885565b915086831015610cb15760405162461bcd60e51b8152602060048201526014602482015273105b5bdd5b9d10481a5cc81d1bdbc81cdb585b1b60621b60448201526064016102d6565b85821015610cf85760405162461bcd60e51b8152602060048201526014602482015273105b5bdd5b9d10881a5cc81d1bdbc81cdb585b1b60621b60448201526064016102d6565b610d0233896112c1565b60405163a9059cbb60e01b81526001600160a01b038681166004830152602482018590528b169063a9059cbb906044016020604051808303816000875af1158015610d51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d759190611934565b5060405163a9059cbb60e01b81526001600160a01b038681166004830152602482018490528a169063a9059cbb906044016020604051808303816000875af1158015610dc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de99190611934565b5060408051848152602081018490529081018990526001600160a01b03808716918b8216918d16907faa29d8bbadb22be3bb6dbe493ae8a0f5b6bba22ed4da0ab6c4808bab559de8359060600160405180910390a45097509795505050505050565b600080600042841015610e705760405162461bcd60e51b81526004016102d6906118e1565b506002548015610fdd576040516370a0823160e01b81523060048201526000906001600160a01b038d16906370a0823190602401602060405180830381865afa158015610ec1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee5919061191b565b610eef838c61186e565b610ef99190611885565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038d16906370a0823190602401602060405180830381865afa158015610f43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f67919061191b565b610f71848c61186e565b610f7b9190611885565b905080821015610fa4578a945084610f938e8e610895565b610f9d919061186e565b9350610fd6565b8993506000610fb38d8f610895565b9050670de0b6b3a7640000610fc8868361186e565b610fd29190611885565b9550505b5050610fe6565b50879150869050815b8287111561102e5760405162461bcd60e51b8152602060048201526015602482015274105b5bdd5b9d0810481a5cc81d1bdbc81cdb585b1b605a1b60448201526064016102d6565b818611156110765760405162461bcd60e51b8152602060048201526015602482015274105b5bdd5b9d0810881a5cc81d1bdbc81cdb585b1b605a1b60448201526064016102d6565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038c16906323b872dd906064016020604051808303816000875af11580156110c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ed9190611934565b506040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038b16906323b872dd906064016020604051808303816000875af1158015611141573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111659190611934565b5061117085826112fb565b60408051848152602081018490529081018290526001600160a01b03808716918c8216918e16907fa7c0bc175494aac705fdccdb501213f94fb9a6f1dd9be0b3488298cb2dc160889060600160405180910390a4985098509895505050505050565b6111df8383836001611331565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461125c578181101561124d57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016102d6565b61125c84848484036000611331565b50505050565b6001600160a01b03831661128c57604051634b637e8f60e11b8152600060048201526024016102d6565b6001600160a01b0382166112b65760405163ec442f0560e01b8152600060048201526024016102d6565b6111df838383611406565b6001600160a01b0382166112eb57604051634b637e8f60e11b8152600060048201526024016102d6565b6112f782600083611406565b5050565b6001600160a01b0382166113255760405163ec442f0560e01b8152600060048201526024016102d6565b6112f760008383611406565b6001600160a01b03841661135b5760405163e602df0560e01b8152600060048201526024016102d6565b6001600160a01b03831661138557604051634a1406b160e11b8152600060048201526024016102d6565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561125c57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113f891815260200190565b60405180910390a350505050565b6001600160a01b038316611431578060026000828254611426919061185b565b909155506114a39050565b6001600160a01b038316600090815260208190526040902054818110156114845760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102d6565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166114bf576002805482900390556114de565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161152391815260200190565b60405180910390a3505050565b60008060006060848603121561154557600080fd5b505081359360208301359350604090920135919050565b600060208083528351808285015260005b818110156115895785810183015185820160400152820161156d565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146115c157600080fd5b919050565b600080604083850312156115d957600080fd5b6115e2836115aa565b946020939093013593505050565b60008060006060848603121561160557600080fd5b61160e846115aa565b925061161c602085016115aa565b9150604084013590509250925092565b60008060008060008060a0878903121561164557600080fd5b8635955060208701359450604087013567ffffffffffffffff8082111561166b57600080fd5b818901915089601f83011261167f57600080fd5b81358181111561168e57600080fd5b8a60208260051b85010111156116a357600080fd5b6020830196508095505050506116bb606088016115aa565b9150608087013590509295509295509295565b6020808252825182820181905260009190848201906040850190845b81811015611706578351835292840192918401916001016116ea565b50909695505050505050565b60006020828403121561172457600080fd5b61172d826115aa565b9392505050565b6000806040838503121561174757600080fd5b611750836115aa565b915061175e602084016115aa565b90509250929050565b600080600080600080600060e0888a03121561178257600080fd5b61178b886115aa565b9650611799602089016115aa565b95506040880135945060608801359350608088013592506117bc60a089016115aa565b915060c0880135905092959891949750929550565b600080600080600080600080610100898b0312156117ee57600080fd5b6117f7896115aa565b975061180560208a016115aa565b965060408901359550606089013594506080890135935060a0890135925061182f60c08a016115aa565b915060e089013590509295985092959890939650565b634e487b7160e01b600052601160045260246000fd5b8082018082111561041257610412611845565b808202811582820484141761041257610412611845565b6000826118a257634e487b7160e01b600052601260045260246000fd5b500490565b600181811c908216806118bb57607f821691505b6020821081036118db57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600a90820152692a34b6b2a4b9a7bb32b960b11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561192d57600080fd5b5051919050565b60006020828403121561194657600080fd5b8151801515811461172d57600080fd5b818103818111156104125761041261184556fea2646970667358221220ba55cd5618699e8a0fe5f021cf1a7f185f9b0c15ab3fbd0ebeb6d775d220b7a464736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063ac41865a11610066578063ac41865a146101db578063baa2abde146101ee578063dd62ed3e14610216578063e8e337001461024f57600080fd5b806370a082311461019757806395d89b41146101c0578063a9059cbb146101c857600080fd5b806318160ddd116100c857806318160ddd1461014d57806323b872dd14610155578063313ce5671461016857806338ed17391461017757600080fd5b8063054d50d4146100ef57806306fdde0314610115578063095ea7b31461012a575b600080fd5b6101026100fd366004611530565b61027d565b6040519081526020015b60405180910390f35b61011d61036c565b60405161010c919061155c565b61013d6101383660046115c6565b6103fe565b604051901515815260200161010c565b600254610102565b61013d6101633660046115f0565b610418565b6040516012815260200161010c565b61018a61018536600461162c565b61043c565b60405161010c91906116ce565b6101026101a5366004611712565b6001600160a01b031660009081526020819052604090205490565b61011d610878565b61013d6101d63660046115c6565b610887565b6101026101e9366004611734565b610895565b6102016101fc366004611767565b610a7b565b6040805192835260208301919091520161010c565b610102610224366004611734565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61026261025d3660046117d1565b610e4b565b6040805193845260208401929092529082015260600161010c565b60008084116102df5760405162461bcd60e51b815260206004820152602360248201527f416d6f756e7420696e206d7573742062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b6000831180156102ef5750600082115b6103465760405162461bcd60e51b815260206004820152602260248201527f5265736572766573206d7573742062652067726561746572207468616e207a65604482015261726f60f01b60648201526084016102d6565b610350838561185b565b61035a838661186e565b6103649190611885565b949350505050565b60606003805461037b906118a7565b80601f01602080910402602001604051908101604052809291908181526020018280546103a7906118a7565b80156103f45780601f106103c9576101008083540402835291602001916103f4565b820191906000526020600020905b8154815290600101906020018083116103d757829003601f168201915b5050505050905090565b60003361040c8185856111d2565b60019150505b92915050565b6000336104268582856111e4565b610431858585611262565b506001949350505050565b6060600284146104845760405162461bcd60e51b8152602060048201526013602482015272092dcecc2d8d2c840e0c2e8d040d8cadccee8d606b1b60448201526064016102d6565b428210156104a45760405162461bcd60e51b81526004016102d6906118e1565b6000858560008181106104b9576104b9611905565b90506020020160208101906104ce9190611712565b90506000868660018181106104e5576104e5611905565b90506020020160208101906104fa9190611712565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610544573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610568919061191b565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156105b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d6919061191b565b6040516323b872dd60e01b8152336004820152306024820152604481018d90529091506001600160a01b038516906323b872dd906064016020604051808303816000875af115801561062c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106509190611934565b50600061065d8c8461185b565b610667838e61186e565b6106719190611885565b90508a8110156106b95760405162461bcd60e51b8152602060048201526013602482015272105b5bdd5b9d13dd5d081d1bdbc81cdb585b1b606a1b60448201526064016102d6565b60405163a9059cbb60e01b81526001600160a01b0389811660048301526024820183905285169063a9059cbb906044016020604051808303816000875af1158015610708573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072c9190611934565b5060408051600280825260608201835290916020830190803683370190505095508b8660008151811061076157610761611905565b602002602001018181525050808660018151811061078157610781611905565b60209081029190910101528989610799600182611956565b8181106107a8576107a8611905565b90506020020160208101906107bd9190611712565b6001600160a01b03168a8a60008181106107d9576107d9611905565b90506020020160208101906107ee9190611712565b6001600160a01b0316336001600160a01b03167fad56699d0f375866eb895ed27203058a36a713382aaded78eb6b67da266d43328f8a60018c516108329190611956565b8151811061084257610842611905565b6020026020010151604051610861929190918252602082015260400190565b60405180910390a450505050509695505050505050565b60606004805461037b906118a7565b60003361040c818585611262565b6040516370a0823160e01b815230600482015260009081906001600160a01b038516906370a0823190602401602060405180830381865afa1580156108de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610902919061191b565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038516906370a0823190602401602060405180830381865afa15801561094c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610970919061191b565b90506000821180156109825750600081115b6109e25760405162461bcd60e51b815260206004820152602b60248201527f496e73756666696369656e7420726573657276657320666f722070726963652060448201526a31b0b631bab630ba34b7b760a91b60648201526084016102d6565b836001600160a01b0316856001600160a01b031603610a555760405162461bcd60e51b815260206004820152602960248201527f43616e6e6f742063616c63756c61746520707269636520666f7220746865207360448201526830b6b2903a37b5b2b760b91b60648201526084016102d6565b81610a6882670de0b6b3a764000061186e565b610a729190611885565b95945050505050565b600080336001600160a01b03851614610aec5760405162461bcd60e51b815260206004820152602d60248201527f4f6e6c79206c69717569646974792070726f76696465722063616e206275726e60448201526c20746865697220746f6b656e7360981b60648201526084016102d6565b6000610af760025490565b905060008111610b495760405162461bcd60e51b815260206004820152601860248201527f4e6f206c697175696469747920696e2074686520706f6f6c000000000000000060448201526064016102d6565b42841015610b695760405162461bcd60e51b81526004016102d6906118e1565b6040516370a0823160e01b815230600482015281906001600160a01b038c16906370a0823190602401602060405180830381865afa158015610baf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd3919061191b565b610bdd908a61186e565b610be79190611885565b6040516370a0823160e01b815230600482015290935081906001600160a01b038b16906370a0823190602401602060405180830381865afa158015610c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c54919061191b565b610c5e908a61186e565b610c689190611885565b915086831015610cb15760405162461bcd60e51b8152602060048201526014602482015273105b5bdd5b9d10481a5cc81d1bdbc81cdb585b1b60621b60448201526064016102d6565b85821015610cf85760405162461bcd60e51b8152602060048201526014602482015273105b5bdd5b9d10881a5cc81d1bdbc81cdb585b1b60621b60448201526064016102d6565b610d0233896112c1565b60405163a9059cbb60e01b81526001600160a01b038681166004830152602482018590528b169063a9059cbb906044016020604051808303816000875af1158015610d51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d759190611934565b5060405163a9059cbb60e01b81526001600160a01b038681166004830152602482018490528a169063a9059cbb906044016020604051808303816000875af1158015610dc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de99190611934565b5060408051848152602081018490529081018990526001600160a01b03808716918b8216918d16907faa29d8bbadb22be3bb6dbe493ae8a0f5b6bba22ed4da0ab6c4808bab559de8359060600160405180910390a45097509795505050505050565b600080600042841015610e705760405162461bcd60e51b81526004016102d6906118e1565b506002548015610fdd576040516370a0823160e01b81523060048201526000906001600160a01b038d16906370a0823190602401602060405180830381865afa158015610ec1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee5919061191b565b610eef838c61186e565b610ef99190611885565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038d16906370a0823190602401602060405180830381865afa158015610f43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f67919061191b565b610f71848c61186e565b610f7b9190611885565b905080821015610fa4578a945084610f938e8e610895565b610f9d919061186e565b9350610fd6565b8993506000610fb38d8f610895565b9050670de0b6b3a7640000610fc8868361186e565b610fd29190611885565b9550505b5050610fe6565b50879150869050815b8287111561102e5760405162461bcd60e51b8152602060048201526015602482015274105b5bdd5b9d0810481a5cc81d1bdbc81cdb585b1b605a1b60448201526064016102d6565b818611156110765760405162461bcd60e51b8152602060048201526015602482015274105b5bdd5b9d0810881a5cc81d1bdbc81cdb585b1b605a1b60448201526064016102d6565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038c16906323b872dd906064016020604051808303816000875af11580156110c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ed9190611934565b506040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038b16906323b872dd906064016020604051808303816000875af1158015611141573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111659190611934565b5061117085826112fb565b60408051848152602081018490529081018290526001600160a01b03808716918c8216918e16907fa7c0bc175494aac705fdccdb501213f94fb9a6f1dd9be0b3488298cb2dc160889060600160405180910390a4985098509895505050505050565b6111df8383836001611331565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461125c578181101561124d57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016102d6565b61125c84848484036000611331565b50505050565b6001600160a01b03831661128c57604051634b637e8f60e11b8152600060048201526024016102d6565b6001600160a01b0382166112b65760405163ec442f0560e01b8152600060048201526024016102d6565b6111df838383611406565b6001600160a01b0382166112eb57604051634b637e8f60e11b8152600060048201526024016102d6565b6112f782600083611406565b5050565b6001600160a01b0382166113255760405163ec442f0560e01b8152600060048201526024016102d6565b6112f760008383611406565b6001600160a01b03841661135b5760405163e602df0560e01b8152600060048201526024016102d6565b6001600160a01b03831661138557604051634a1406b160e11b8152600060048201526024016102d6565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561125c57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113f891815260200190565b60405180910390a350505050565b6001600160a01b038316611431578060026000828254611426919061185b565b909155506114a39050565b6001600160a01b038316600090815260208190526040902054818110156114845760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102d6565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166114bf576002805482900390556114de565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161152391815260200190565b60405180910390a3505050565b60008060006060848603121561154557600080fd5b505081359360208301359350604090920135919050565b600060208083528351808285015260005b818110156115895785810183015185820160400152820161156d565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146115c157600080fd5b919050565b600080604083850312156115d957600080fd5b6115e2836115aa565b946020939093013593505050565b60008060006060848603121561160557600080fd5b61160e846115aa565b925061161c602085016115aa565b9150604084013590509250925092565b60008060008060008060a0878903121561164557600080fd5b8635955060208701359450604087013567ffffffffffffffff8082111561166b57600080fd5b818901915089601f83011261167f57600080fd5b81358181111561168e57600080fd5b8a60208260051b85010111156116a357600080fd5b6020830196508095505050506116bb606088016115aa565b9150608087013590509295509295509295565b6020808252825182820181905260009190848201906040850190845b81811015611706578351835292840192918401916001016116ea565b50909695505050505050565b60006020828403121561172457600080fd5b61172d826115aa565b9392505050565b6000806040838503121561174757600080fd5b611750836115aa565b915061175e602084016115aa565b90509250929050565b600080600080600080600060e0888a03121561178257600080fd5b61178b886115aa565b9650611799602089016115aa565b95506040880135945060608801359350608088013592506117bc60a089016115aa565b915060c0880135905092959891949750929550565b600080600080600080600080610100898b0312156117ee57600080fd5b6117f7896115aa565b975061180560208a016115aa565b965060408901359550606089013594506080890135935060a0890135925061182f60c08a016115aa565b915060e089013590509295985092959890939650565b634e487b7160e01b600052601160045260246000fd5b8082018082111561041257610412611845565b808202811582820484141761041257610412611845565b6000826118a257634e487b7160e01b600052601260045260246000fd5b500490565b600181811c908216806118bb57607f821691505b6020821081036118db57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600a90820152692a34b6b2a4b9a7bb32b960b11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561192d57600080fd5b5051919050565b60006020828403121561194657600080fd5b8151801515811461172d57600080fd5b818103818111156104125761041261184556fea2646970667358221220ba55cd5618699e8a0fe5f021cf1a7f185f9b0c15ab3fbd0ebeb6d775d220b7a464736f6c63430008140033",
  "devdoc": {
    "details": "revision 4.",
    "errors": {
      "ERC20InsufficientAllowance(address,uint256,uint256)": [
        {
          "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
          "params": {
            "allowance": "Amount of tokens a `spender` is allowed to operate with.",
            "needed": "Minimum amount required to perform a transfer.",
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC20InsufficientBalance(address,uint256,uint256)": [
        {
          "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
          "params": {
            "balance": "Current balance for the interacting account.",
            "needed": "Minimum amount required to perform a transfer.",
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC20InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSpender(address)": [
        {
          "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
          "params": {
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": {
        "details": "This function transfers tokens from the user to the contract, calculates       the liquidity based on reserves,      and issues liquidity tokens to the user.",
        "params": {
          "amountADesired": "The desired amount of token A to add.",
          "amountAMin": "The minimum acceptable amount of token A to avoid failure.",
          "amountBDesired": "The desired amount of token B to add.",
          "amountBMin": "The minimum acceptable amount of token B to avoid failure.",
          "deadline": "The timestamp by which the transaction must be completed.",
          "to": "The address of the recipient who will receive liquidity tokens.",
          "tokenA": "The address of the first token.",
          "tokenB": "The address of the second token."
        },
        "returns": {
          "amountA": "The effective amount of token A added.",
          "amountB": "The effective amount of token B added.",
          "liquidity": "The amount of liquidity tokens issued."
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "getAmountOut(uint256,uint256,uint256)": {
        "details": "This function computes the output amount based on input amount and reserves.",
        "params": {
          "amountIn": "The amount of input tokens.",
          "reserveIn": "The current reserves of the input token.",
          "reserveOut": "The current reserves of the output token."
        },
        "returns": {
          "amountOut": "The amount of tokens to be received."
        }
      },
      "getPrice(address,address)": {
        "details": "This function fetches the reserves of both tokens and calculates the price.",
        "params": {
          "tokenA": "The address of the first token.",
          "tokenB": "The address of the second token."
        },
        "returns": {
          "price": "The price of token A in terms of token B."
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": {
        "details": "This function burns liquidity tokens from the user and returns the respective amounts of token A and B.",
        "params": {
          "amountAMin": "The minimum acceptable amount of token A to avoid failure.",
          "amountBMin": "The minimum acceptable amount of token B to avoid failure.",
          "deadline": "The timestamp by which the transaction must be completed.",
          "liquidity": "The amount of liquidity tokens to withdraw.",
          "to": "The address of the recipient who will receive the tokens.",
          "tokenA": "The address of the first token.",
          "tokenB": "The address of the second token."
        },
        "returns": {
          "amountA": "The amount of token A received after removing liquidity.",
          "amountB": "The amount of token B received after removing liquidity."
        }
      },
      "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": {
        "details": "This function transfers the input token from the user to the contract,      calculates the swap amount based on reserves, and transfers the output token to the user.",
        "params": {
          "amountIn": "The amount of input tokens.",
          "amountOutMin": "The minimum acceptable amount of output tokens.",
          "deadline": "The timestamp by which the transaction must be completed.",
          "path": "An array of token addresses (input token, output token).",
          "to": "The address of the recipient who will receive the output tokens."
        },
        "returns": {
          "amounts": "An array containing the amounts of input and output tokens."
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
      }
    },
    "title": "SimpleSwap a Liquidity Pool Contract ",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": {
        "notice": "Adds liquidity to a token pair in the ERC-20 pool."
      },
      "getAmountOut(uint256,uint256,uint256)": {
        "notice": "Calculates the amount of tokens received from a swap."
      },
      "getPrice(address,address)": {
        "notice": "Retrieves the price of one token in terms of another."
      },
      "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": {
        "notice": "Removes liquidity from a token pair in the ERC-20 pool."
      },
      "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": {
        "notice": "Swaps an exact amount of one token for another."
      }
    },
    "notice": "This contract allows users to add/remove liquidity and swap tokens in an ERC-20 pool.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 159,
        "contract": "contracts/SimpleSwap.sol:SimpleSwap",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 165,
        "contract": "contracts/SimpleSwap.sol:SimpleSwap",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 167,
        "contract": "contracts/SimpleSwap.sol:SimpleSwap",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 169,
        "contract": "contracts/SimpleSwap.sol:SimpleSwap",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 171,
        "contract": "contracts/SimpleSwap.sol:SimpleSwap",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}